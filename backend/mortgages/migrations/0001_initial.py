# Generated by Django 3.0.2 on 2020-01-27 08:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(db_index=True, max_length=150, verbose_name='Название Банка')),
                ('bank_logo', models.ImageField(upload_to='logo_bank/')),
                ('preference_is_active', models.BooleanField(default=False, verbose_name='Преференция, Есть/нет ')),
                ('preference_value', models.FloatField(blank=True, db_index=True, null=True, verbose_name='Сколько %')),
                ('preference_comment', models.CharField(blank=True, max_length=255, verbose_name='Комментарий к преференции')),
            ],
            options={
                'verbose_name': 'Банк',
                'verbose_name_plural': 'Банки',
                'ordering': ['bank_name'],
            },
        ),
        migrations.CreateModel(
            name='MortgagePrograms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programs_name', models.CharField(db_index=True, max_length=150, verbose_name='Название ипотечной программы')),
                ('rate', models.FloatField(db_index=True, verbose_name='Ставка')),
                ('rate_salary', models.FloatField(blank=True, db_index=True, verbose_name='Ставка, для зарплатников')),
                ('first_payment', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Первоначальный взнос')),
                ('min_sum_credit', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Минимальная сумма кредита, руб')),
                ('max_sum_credit', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Максимальная сумма кредита, руб')),
                ('min_time_credit', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Минимальный срок кредита, лет')),
                ('max_time_credit', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Максимальный срок кредита, лет')),
                ('min_borrower_age', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Минимальный возраст заёмщика')),
                ('max_borrower_age', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Максимальный возраст заёмщика')),
                ('understatement_is_active', models.BooleanField(default=False, verbose_name='Занижение, Есть/нет')),
                ('understatement_comment', models.CharField(blank=True, max_length=255, verbose_name='Комментарий к занижению')),
                ('co_borrowers', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Созаемщики')),
                ('commission', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Коммисия')),
                ('seller_registration', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Регистрация продавца')),
                ('express_issue', models.CharField(blank=True, choices=[('yes', 'Да'), ('no', 'Нет')], db_index=True, max_length=255, verbose_name='Экспресс выдача')),
                ('inclusion_children', models.CharField(blank=True, choices=[('yes', 'Да'), ('no', 'Нет')], db_index=True, max_length=255, verbose_name='Включение детей в число собственников')),
                ('room', models.CharField(blank=True, choices=[('yes', 'Да'), ('no', 'Нет')], db_index=True, max_length=255, verbose_name='Комната')),
                ('room_comment', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Комментарий к Комната')),
                ('share', models.CharField(blank=True, choices=[('yes', 'Да'), ('no', 'Нет')], db_index=True, max_length=255, verbose_name='Доля')),
                ('share_comment', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Комментарий к Доля')),
                ('private_house', models.CharField(blank=True, choices=[('yes', 'Да'), ('no', 'Нет')], db_index=True, max_length=255, verbose_name='Частный дом')),
                ('private_comment', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Комментарий к Частный дом')),
                ('apartments', models.CharField(blank=True, choices=[('yes', 'Да'), ('no', 'Нет')], db_index=True, max_length=255, verbose_name='Апартаменты')),
                ('apartments_comment', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Комментарий к Апартаменты')),
                ('redevelopment', models.CharField(blank=True, choices=[('yes', 'Да'), ('no', 'Нет')], db_index=True, max_length=255, verbose_name='Перепланировка')),
                ('redevelopment_comment', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Комментарий к Перепланировка')),
                ('overlap', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Перекрытия')),
                ('storeys', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Этажность')),
                ('housing_wear', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Износ жилья')),
                ('req_tech_docs', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Требования к техническим документам')),
                ('add_info', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Дополнительная информация')),
                ('programs_bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mortgages.Banks', verbose_name='Название Банка')),
            ],
            options={
                'verbose_name': 'Программа по ипотеке',
                'verbose_name_plural': 'Программы по ипотеке',
                'ordering': ['programs_bank'],
            },
        ),
    ]
